name: Deploy para VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Clonar reposit√≥rio
        uses: actions/checkout@v3

      # Frontend
      - name: üß± Instalar depend√™ncias do Frontend
        run: npm install

      - name: üèóÔ∏è Buildar Frontend
        run: npm run build

      # API
      - name: üß± Instalar depend√™ncias da API
        working-directory: ./api
        run: npm install

      - name: üèóÔ∏è Buildar API
        working-directory: ./api
        run: npm run build

      # Backup de arquivos importantes
      - name: üîÑ Backup de arquivos importantes
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.VPS_KEY }}
          script: |
            # Criar diret√≥rio tempor√°rio para backup
            mkdir -p /tmp/paulaelucas_backup
            
            cd /var/www/paulaelucas
            # Backup dos arquivos de configura√ß√£o
            if [ -f .env ]; then cp .env /tmp/paulaelucas_backup/.env; fi
            if [ -f docker-compose.yml ]; then cp docker-compose.yml /tmp/paulaelucas_backup/docker-compose.yml; fi
            if [ -f docker-compose.prod.yml ]; then cp docker-compose.prod.yml /tmp/paulaelucas_backup/docker-compose.prod.yml; fi
            if [ -f nginx.conf ]; then cp nginx.conf /tmp/paulaelucas_backup/nginx.conf; fi
            
            # Backup da pasta mysql
            if [ -d mysql ]; then
              cp -r mysql /tmp/paulaelucas_backup/
            fi

      # Deploy Frontend
      - name: üöÄ Enviar Frontend para VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.VPS_KEY }}
          source: "dist/*"
          target: "/var/www/paulaelucas"
          overwrite: true
          strip_components: 1

      # Deploy API
      - name: üöÄ Enviar API para VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.VPS_KEY }}
          source: "api/*"
          target: "/var/www/paulaelucas"
          overwrite: true
          strip_components: 0

      # Deploy MySQL
      - name: üöÄ Enviar pasta MySQL para VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.VPS_KEY }}
          source: "mysql/*"
          target: "/var/www/paulaelucas/mysql"
          overwrite: true
          strip_components: 1

      # Restaurar arquivos importantes e configurar API
      - name: üîÑ Restaurar arquivos e configurar API
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.VPS_KEY }}
          script: |
            # Instalar Node.js se n√£o estiver instalado
            if ! command -v node &> /dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi

            # Instalar PM2 globalmente se n√£o estiver instalado
            if ! command -v pm2 &> /dev/null; then
              sudo npm install -g pm2
            fi

            cd /var/www/paulaelucas

            # Restaurar arquivos de configura√ß√£o apenas se n√£o existirem
            [ ! -f .env ] && [ -f /tmp/paulaelucas_backup/.env ] && cp /tmp/paulaelucas_backup/.env .env
            [ ! -f docker-compose.yml ] && [ -f /tmp/paulaelucas_backup/docker-compose.yml ] && cp /tmp/paulaelucas_backup/docker-compose.yml docker-compose.yml
            [ ! -f docker-compose.prod.yml ] && [ -f /tmp/paulaelucas_backup/docker-compose.prod.yml ] && cp /tmp/paulaelucas_backup/docker-compose.prod.yml docker-compose.prod.yml
            [ ! -f nginx.conf ] && [ -f /tmp/paulaelucas_backup/nginx.conf ] && cp /tmp/paulaelucas_backup/nginx.conf nginx.conf

            # Restaurar pasta mysql apenas se n√£o existir
            if [ ! -d mysql ] && [ -d /tmp/paulaelucas_backup/mysql ]; then
              cp -r /tmp/paulaelucas_backup/mysql .
            fi

            # Limpar backup tempor√°rio
            rm -rf /tmp/paulaelucas_backup

            cd /var/www/paulaelucas/api
            npm install --production
            pm2 delete api || true
            pm2 start src/server.js --name api
            pm2 save 